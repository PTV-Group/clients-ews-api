/*
 * EWS Road Distance
 * With the EWS Road Distance service you can query pre-calculated distances and additional information for relations between reference locations in Europe.
 *
 * The version of the OpenAPI document: 1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ptvgroup.developer.client.ews.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ptvgroup.developer.client.ews.model.LocationType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * RequestLocation
 */
@JsonPropertyOrder({
  RequestLocation.JSON_PROPERTY_COUNTRY,
  RequestLocation.JSON_PROPERTY_POSTAL_CODE,
  RequestLocation.JSON_PROPERTY_LOCALITY,
  RequestLocation.JSON_PROPERTY_TYPE
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-02-01T08:13:59.821599Z[Etc/UTC]")
public class RequestLocation {
  public static final String JSON_PROPERTY_COUNTRY = "country";
  private JsonNullable<String> country = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_POSTAL_CODE = "postalCode";
  private JsonNullable<String> postalCode = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCALITY = "locality";
  private JsonNullable<String> locality = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TYPE = "type";
  private LocationType type = LocationType.CITY;

  public RequestLocation() { 
  }

  public RequestLocation country(String country) {
    this.country = JsonNullable.<String>of(country);
    return this;
  }

   /**
   * The country represented by its code according to [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
   * @return country
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "DE", value = "The country represented by its code according to [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).")
  @JsonIgnore

  public String getCountry() {
        return country.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCountry_JsonNullable() {
    return country;
  }
  
  @JsonProperty(JSON_PROPERTY_COUNTRY)
  public void setCountry_JsonNullable(JsonNullable<String> country) {
    this.country = country;
  }

  public void setCountry(String country) {
    this.country = JsonNullable.<String>of(country);
  }


  public RequestLocation postalCode(String postalCode) {
    this.postalCode = JsonNullable.<String>of(postalCode);
    return this;
  }

   /**
   * The postal code, or zip-code, which is used by a postal authority of a country.
   * @return postalCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "76131", value = "The postal code, or zip-code, which is used by a postal authority of a country.")
  @JsonIgnore

  public String getPostalCode() {
        return postalCode.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_POSTAL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPostalCode_JsonNullable() {
    return postalCode;
  }
  
  @JsonProperty(JSON_PROPERTY_POSTAL_CODE)
  public void setPostalCode_JsonNullable(JsonNullable<String> postalCode) {
    this.postalCode = postalCode;
  }

  public void setPostalCode(String postalCode) {
    this.postalCode = JsonNullable.<String>of(postalCode);
  }


  public RequestLocation locality(String locality) {
    this.locality = JsonNullable.<String>of(locality);
    return this;
  }

   /**
   * The name of a locality in the language spoken in that country or region, always transliterated to Latin. It can be the name of a city (e.g. &#39;Karlsruhe&#39;), a subdistrict (e.g. &#39;Durlach&#39;) or a combination of both separated with a blank (e.g. &#39;Karlsruhe Durlach&#39;).
   * @return locality
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Karlsruhe", value = "The name of a locality in the language spoken in that country or region, always transliterated to Latin. It can be the name of a city (e.g. 'Karlsruhe'), a subdistrict (e.g. 'Durlach') or a combination of both separated with a blank (e.g. 'Karlsruhe Durlach').")
  @JsonIgnore

  public String getLocality() {
        return locality.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocality_JsonNullable() {
    return locality;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCALITY)
  public void setLocality_JsonNullable(JsonNullable<String> locality) {
    this.locality = locality;
  }

  public void setLocality(String locality) {
    this.locality = JsonNullable.<String>of(locality);
  }


  public RequestLocation type(LocationType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocationType getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(LocationType type) {
    this.type = type;
  }


  /**
   * Return true if this RequestLocation object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RequestLocation requestLocation = (RequestLocation) o;
    return equalsNullable(this.country, requestLocation.country) &&
        equalsNullable(this.postalCode, requestLocation.postalCode) &&
        equalsNullable(this.locality, requestLocation.locality) &&
        Objects.equals(this.type, requestLocation.type);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(country), hashCodeNullable(postalCode), hashCodeNullable(locality), type);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RequestLocation {\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    locality: ").append(toIndentedString(locality)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

